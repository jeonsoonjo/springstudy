/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-07-31 14:22:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/member/../layout/footer.jsp", Long.valueOf(1627715096899L));
    _jspx_dependants.put("jar:file:/C:/spring0303/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringD/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1624616931203L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("utf-8"); 
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header2.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("마이페이지", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/layout.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/myPage.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- script -->\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t// 페이지 로드\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\tfn_updatePw();\r\n");
      out.write("\t\t\tfn_presentPwCheck();\r\n");
      out.write("\t\t\tfn_updateMember();\r\n");
      out.write("\t\t\tfn_phoneCheck();\r\n");
      out.write("\t\t\tfn_emailCheck();\r\n");
      out.write("\t\t\tfn_emailCode();\r\n");
      out.write("\t\t\tfn_leave();\r\n");
      out.write("\t\t\tfn_fromKakao();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 현재 비밀번호 확인(presentPwCheck)\r\n");
      out.write("\t\tvar presentPwPass = false;\r\n");
      out.write("\t\tfunction fn_presentPwCheck(){\r\n");
      out.write("\t\t\t$('#mPw0').keyup(function(){\r\n");
      out.write("\t\t\t\tvar obj ={ // 현재 비밀번호 객체 생성\r\n");
      out.write("\t\t\t\t\t\tmpw : $('#mPw0').val()\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: 'presentPwCheck.do',\r\n");
      out.write("\t\t\t\t\ttype: 'post',\r\n");
      out.write("\t\t\t\t\tdata: JSON.stringify(obj), // 보내는 data 문자열화\r\n");
      out.write("\t\t\t\t\tcontentType: 'application/json', // 보내는 data가 json일 때, 필수 옵션\r\n");
      out.write("\t\t\t\t\tdataType: 'json', // 받는 data\r\n");
      out.write("\t\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\t\tif (resultMap.isCorrect) { // 현재 비밀번호가 일치할 경우\r\n");
      out.write("\t\t\t\t\t\t\t$('.mPw0_result').text('현재 비밀번호와 일치합니다.');\r\n");
      out.write("\t\t\t\t\t\t\t$('.mPw0_result').css('color', '#804040');\r\n");
      out.write("\t\t\t\t\t\t\tpresentPwPass = true;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t$('.mPw0_result').text('현재 비밀번호가 일치하지 않습니다. 확인하세요.');\r\n");
      out.write("\t\t\t\t\t\t\t$('.mPw0_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t\t\tpresentPwPass = false;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(xhr, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 비밀번호 변경(updatePw)\r\n");
      out.write("\t\tfunction fn_updatePw(){\r\n");
      out.write("\t\t\t$('#updatePw_btn').click(function(){\r\n");
      out.write("\t\t\t\tif($('#mPw0').val() == ''){ // 현재 비밀번호를 입력하지 않을 경우\r\n");
      out.write("\t\t\t\t\talert('현재 비밀번호를 입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('#mPw0').focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else if(!presentPwPass){ // 위 현재 비밀번호 통과하지 못 했을 경우(기존 비밀번호와 일치하지 않을 경우)\r\n");
      out.write("\t\t\t\t\talert('현재 비밀번호가 일치하지 않습니다. 확인해주세요.');\r\n");
      out.write("\t\t\t\t\t$('#mPw0').focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else if($('#mPw').val() == ''){ // 새로운 비밀번호를 입력하지 않을 경우\r\n");
      out.write("\t\t\t\t\talert('새 비밀번호를  입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('#mPw').focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else if($('#mPw').val() != $('#mPw1').val()){ // 새로 입력한 비밀번호와 확인 검증이 이뤄지지 않을 경우\r\n");
      out.write("\t\t\t\t\talert('새로 입력한 비밀번호가 일치하지 않습니다. 확인해주세요.');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('#f').attr('action', 'updatePw.do');\r\n");
      out.write("\t\t\t\t\t$('#f').submit();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 전화번호 유효성 검사(phoneCheck)\r\n");
      out.write("\t\tvar phonePass = false;\r\n");
      out.write("\t\tfunction fn_phoneCheck(){\r\n");
      out.write("\t\t\t$('#mPhone').keyup(function(){\r\n");
      out.write("\t\t\t\t// 전화번호 정규식\r\n");
      out.write("\t\t\t\tvar regPhone = /^010[0-9]{3,4}[0-9]{4}$/;\r\n");
      out.write("\t\t\t\tif(regPhone.test($('#mPhone').val())){ // 전화번호 정규식 조건을 통과 했을 경우\r\n");
      out.write("\t\t\t\t\t$('.phone_result').text('');\r\n");
      out.write("\t\t\t\t\tphonePass = true;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('.phone_result').text('010을 포함하여 -(하이픈) 없이 입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('.phone_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\tphonePass = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 이메일 중복 체크(emailCheck)\r\n");
      out.write("\t\tvar emailPass = false;\r\n");
      out.write("\t\tfunction fn_emailCheck(){\r\n");
      out.write("\t\t\t// 이메일 인증코드 버튼 비활성화(이메일을 변경하지 않을 경우 인증절차를 막기 위함)\r\n");
      out.write("\t\t\t$('#emailCode_btn').click(function(){ }).prop(\"disabled\", true); \r\n");
      out.write("\t\t\t$('#mEmail').keyup(function(){\r\n");
      out.write("\t\t\t\t// 이메일 정규식\r\n");
      out.write("\t\t\t\tvar regEmail = /^[a-z0-9][a-z0-9_-]*@[a-zA-Z0-9]+([.][a-zA-Z]{2,}){1,2}$/;\r\n");
      out.write("\t\t\t\tif(!regEmail.test($('#mEmail').val())){ // 이메일 정규식 조건을 통과하지 못 했을 경우\r\n");
      out.write("\t\t\t\t\t$('.email_result').text('이메일 형식에 맞지 않습니다. 다시 입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('.email_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: 'emailCheck.do',\r\n");
      out.write("\t\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\t\tdata: 'mEmail=' + $('#mEmail').val(),\r\n");
      out.write("\t\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\t\tif(resultMap.result == 0){ // DB에 일치하는 email이 없는 경우 인증버튼 활성화\r\n");
      out.write("\t\t\t\t\t\t\t$('#emailCode_btn').click(function(){ }).prop(\"disabled\", false);\r\n");
      out.write("\t\t\t\t\t\t\t$('.email_result').text('사용 가능한 이메일입니다. 인증코드를 받으세요.');\r\n");
      out.write("\t\t\t\t\t\t\t$('.email_result').css('color', '#804040');\r\n");
      out.write("\t\t\t\t\t\t\temailPass = true;\r\n");
      out.write("\t\t\t\t\t\t} else if($('#mEmail').val() == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'){ // 기존 이메일과 같을 경우 인증버튼 비활성화\r\n");
      out.write("\t\t\t\t\t\t\t$('#emailCode_btn').click(function(){ }).prop(\"disabled\", true);\r\n");
      out.write("\t\t\t\t\t\t\t$('.email_result').text('이미 인증된 이메일입니다.');\r\n");
      out.write("\t\t\t\t\t\t\t$('.email_result').css('color', '#804040');\r\n");
      out.write("\t\t\t\t\t\t\temailPass = false;\r\n");
      out.write("\t\t\t\t\t\t} else{ // DB에 일치하는 email이 있는 경우 인증버튼 비활성화\r\n");
      out.write("\t\t\t\t\t\t\t$('#emailCode_btn').click(function(){ }).prop(\"disabled\", true);\r\n");
      out.write("\t\t\t\t\t\t\t$('.email_result').text('이미 사용 중인 이메일입니다. 이메일 주소를 확인하세요.');\r\n");
      out.write("\t\t\t\t\t\t\t$('.email_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t\t\temailPass = false;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(xhr, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 이메일 인증코드 받기(emailCode)\r\n");
      out.write("\t\tfunction fn_emailCode(){\r\n");
      out.write("\t\t\t$('#emailCode_btn').click(function(){\r\n");
      out.write("\t\t\t\tif($('#mEmail').val() == ''){ // 이메일을 입력하지 않을 경우\r\n");
      out.write("\t\t\t\t\talert('수정할 이메일을 입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('#mEmail').focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: 'emailCode.do',\r\n");
      out.write("\t\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\t\tdata: 'mEmail=' + $('#mEmail').val(),\r\n");
      out.write("\t\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\t\talert('인증코드가 발송되었습니다. 메일을 확인하세요.');\r\n");
      out.write("\t\t\t\t\t\tfn_emailAuth(resultMap.authCode);\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(xhr, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 이메일 인증(emailAuth)\r\n");
      out.write("\t\tvar authPass = false;\r\n");
      out.write("\t\tfunction fn_emailAuth(authCode){\r\n");
      out.write("\t\t\t$('#emailAuth_btn').click(function(){\r\n");
      out.write("\t\t\t\tif(authCode == $('#userKey').val()){ // 받은 인증코드와 입력된 값이 같을 경우\r\n");
      out.write("\t\t\t\t\t$('.emailAuth_result').text('인증되었습니다.');\r\n");
      out.write("\t\t\t\t\t$('.emailAuth_result').css('color', '#804040');\r\n");
      out.write("\t\t\t\t\tauthPass = true;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('.emailAuth_result').text('인증에 실패했습니다. 다시 시도해주세요.');\r\n");
      out.write("\t\t\t\t\t$('.emailAuth_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t$('#mEmail').val() == '';\r\n");
      out.write("\t\t\t\t\tauthPass = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 회원 정보 변경(updateMember)\r\n");
      out.write("\t\tfunction fn_updateMember(){\r\n");
      out.write("\t\t\t$('#update_btn').click(function(){\r\n");
      out.write("\t\t\t\t// 이름, 전화번호, 이메일 중 하나라도 공백일 경우\r\n");
      out.write("\t\t\t\tif($('#mName').val() == '' \r\n");
      out.write("\t\t\t\t   || $('#mPhone').val() == ''\r\n");
      out.write("\t\t\t\t   || $('#mEmail').val() == ''){ \r\n");
      out.write("\t\t\t\t\t  alert('이름, 전화번호, 이메일은 필수정보 입니다. 내용을 입력하세요.');\r\n");
      out.write("\t\t\t\t\t  return false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 기존에 값과 동일할 경우(하나라도 변경 하지 않았을 경우)\r\n");
      out.write("\t\t\t\tif($('#mName').val() == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("\t\t\t   \t \t  && $('#mPhone').val() == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MPhone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("\t\t\t\t      && $('#mEmail').val() == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'){ \r\n");
      out.write("\t\t\t\t      alert('변경된 정보가 없습니다.');\r\n");
      out.write("\t\t\t\t      return false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 하나라도 변경된 정보가 있을 경우 회원정보 변경 성공(단, 이메일 변경 시에는 인증 필수)\r\n");
      out.write("\t\t\t\tif($('#mName').val() != '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("\t\t   \t\t   || $('#mPhone').val() != '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MPhone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("\t\t   \t\t   || $('#mEmail').val() != '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'){ \r\n");
      out.write("\t\t\t\t\t\t// 그중 이메일이 변경됐는데 이메일 인증을 안 했을 경우(회원정보 변경 불가)\r\n");
      out.write("\t\t\t\t\t\tif($('#mEmail').val() != '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' && !authPass){\r\n");
      out.write("\t\t\t\t\t\t\talert('이메일 변경 시, 이메일 인증은 필수입니다.');\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t  \t}\r\n");
      out.write("\t\t\t\t\t\t$('#f').attr('action', 'updateMember.do');\r\n");
      out.write("\t\t\t\t\t\t$('#f').submit();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 회원 탈퇴(leave)\r\n");
      out.write("\t\tfunction fn_leave(){\r\n");
      out.write("\t\t\t$('#leave_btn').click(function(){\r\n");
      out.write("\t\t\t\tif (confirm('정말 탈퇴하시겠습니까?')) {\r\n");
      out.write("\t\t\t\t\tvar inputPw = prompt(\"탈퇴하려면 비밀번호를 입력하세요.\");\r\n");
      out.write("\t\t\t\t\t/*  \r\n");
      out.write("\t\t\t\t\t\tjavaScript window 객체(Explorer 10 이상 지원) 사용\r\n");
      out.write("\t\t\t\t\t\tatob() -> base64 스트링 디코딩(복호화)\r\n");
      out.write("\t\t\t\t\t\tbtoa() -> base64 스트링 인코딩(암호화)\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\t// prompt창에서 입력한 값(inputPw)을 암호화해서 기존 비밀번호와 비교\r\n");
      out.write("\t\t\t\t\tif(btoa(inputPw) == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MPw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'){ // 비밀번호가 일치할 경우 탈퇴\r\n");
      out.write("\t\t\t\t\t\tlocation.href = 'leave.do?mNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\t\r\n");
      out.write("\t\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t\talert('비밀번호를 확인하세요.');\r\n");
      out.write("\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 카카오 로그인일 경우 이메일 변경 불가\r\n");
      out.write("\t\tfunction fn_fromKakao(){\r\n");
      out.write("\t\t\tif($('#mId').val().indexOf('@K') > -1){\r\n");
      out.write("\t\t\t\t$('#mEmail').keyup(function(){ }).prop(\"readonly\", true); // 이메일 읽기만 가능\r\n");
      out.write("\t\t\t\t$('.kakao_email').text('이메일 변경 불가(인증 필요 없음)');\r\n");
      out.write("\t\t\t\t$('#mId, #mEmail').css('color', '#c0c0c0');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 마이페이지 화면 -->\r\n");
      out.write("\t<div class=\"myPage_form\">\r\n");
      out.write("\t\t<form id=\"f\" method=\"post\">\r\n");
      out.write("\t\t\t<h3>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" 님 환영합니다!</h3>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"mNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span class=\"naming\">이름</span><br>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"mName\" id=\"mName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><br><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span class=\"naming\">아이디<span class=\"condition\">(아이디는 수정 불가)</span></span><br>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"mId\" id=\"mId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly><br><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span class=\"naming\">현재 비밀번호</span><br>\r\n");
      out.write("\t\t\t<input type=\"password\" name=\"mPw0\" id=\"mPw0\"><br>\r\n");
      out.write("\t\t\t<span class=\"mPw0_result\"></span><br>\r\n");
      out.write("\t\t\t<span class=\"naming\">새 비밀번호</span><br>\r\n");
      out.write("\t\t\t<input type=\"password\" name=\"mPw\" id=\"mPw\"><br><br>\r\n");
      out.write("\t\t\t<span class=\"naming\">새 비밀번호 확인</span><br>\r\n");
      out.write("\t\t\t<input type=\"password\" name=\"mPw1\" id=\"mPw1\"><br><br>\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"updatePw_btn\" value=\"비밀번호 변경하기\"><br><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span class=\"naming\">전화번호</span><br>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"mPhone\" id=\"mPhone\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MPhone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><br>\r\n");
      out.write("\t\t\t<span class=\"phone_result\"></span><br><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span class=\"naming\">이메일</span><br>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"mEmail\" id=\"mEmail\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><br>\r\n");
      out.write("\t\t\t<span class=\"email_result kakao_email\"></span><br>\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"emailCode_btn\" value=\"인증코드 받기\"><br>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"userKey\" id=\"userKey\" style=\"width:180px;\">\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"emailAuth_btn\" value=\"인증하기\" style=\"width:108px; height:45px;\"><br>\r\n");
      out.write("\t\t\t<span class=\"emailAuth_result\"></span><br><br><br>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t<span class=\"naming\">가입일 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MRegdate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span><br><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"update_btn\" value=\"정보변경하기\" style=\"width:150px; height:45px;\">\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"leave_btn\" value=\"회원탈퇴\" style=\"width:150px; height:45px;\">\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"reserv_btn\" value=\"예약 내역 확인\" onclick=\"location.href='myReservation.do?mNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\" style=\"width:150px; height:45px;\">\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"돌아가기\" onclick=\"location.href='index.do'\" style=\"width:150px; height:45px;\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t</section>\r\n");
      out.write("\t\r\n");
      out.write("\t<footer id=\"footer\">\r\n");
      out.write("\t\t<dl>\r\n");
      out.write("\t\t\t<dt>\r\n");
      out.write("\t\t\t\t<h3>MOOYA HOTEL</h3>\r\n");
      out.write("\t\t\t</dt>\r\n");
      out.write("\t\t\t<dd>\r\n");
      out.write("\t\t\t\t<span id=\"privacy\" style=\"cursor: pointer;\">개인정보처리방침</span>\r\n");
      out.write("\t\t\t\t<span id=\"term\" style=\"cursor: pointer;\">이용약관</span>\r\n");
      out.write("\t\t\t\t<span id=\"noEmail\" style=\"cursor: pointer;\">이메일주소 무단수집거부</span>\r\n");
      out.write("\t\t\t</dd>\r\n");
      out.write("\t\t</dl>\r\n");
      out.write("\t\t<address>\r\n");
      out.write("\t\t\t<span>서울특별시 마포구 서강로 136 아이비티워 2층,3층</span>\r\n");
      out.write("\t\t\t<span>  Tel. 02-123-4567  </span>\r\n");
      out.write("\t\t\t<span> (주)무야호 </span>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<span> \r\n");
      out.write("\t\t\t\tE-mail. \r\n");
      out.write("\t\t\t\t<a href=\"mailto:hotel@mooyahotel.co.kr\">hotel@mooyahotel.co.kr</a>\r\n");
      out.write("\t\t\t</span>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<span>대표자 : 유재석  </span>\r\n");
      out.write("\t\t\t<span>등록번호 111 22 33333</span>\r\n");
      out.write("\t\t</address>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<i class=\"far fa-copyright\"></i>\r\n");
      out.write("\t\t\t<b>www.mooyahotel.com</b>\r\n");
      out.write("\t\t\t<span>All rights reserved.</span>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</footer>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
