/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-07-31 07:23:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class viewBoardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/spring0303/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringD/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1624616931203L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("로그인", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/loginWindow.css\"> \r\n");
      out.write("\t<style>\r\n");
      out.write("\t\ttable{\r\n");
      out.write("\t\t\ttext-align: center;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t#notice{\r\n");
      out.write("\t\t\tbackground-color: orange;\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\tgetDate();\t\t// 시간 보여주는 함수\r\n");
      out.write("\t\t\tfn_closeLogin();\t// 로그인창에서 x 클릭시 로그인창 닫힘\r\n");
      out.write("\t\t\tfn_toggle_mode(); \t// 관리자 로그인 모드 / 회원 로그인 모드로 변경하는 버튼\r\n");
      out.write("\t\t\tfn_insertBoard();\t// 새 글 작성 버튼 클릭시 로그인창 켜지거나 페이지 이동하는 함수\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfn_init();\t// 전체 목록 불러오기 버튼\r\n");
      out.write("\t\t\tclick_search();\r\n");
      out.write("\t\t\t\r\n");
      out.write("  \t   \t \t$('<input type=\"hidden\" name=\"page\" value=\"board/viewBoardList\">')\r\n");
      out.write("\t\t\t.appendTo( $('.form') )\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\t\r\n");
      out.write("\t\t\t\t// 만약 model을 통해 query가 채워지지 않은 상태라면,\r\n");
      out.write("\t\t\t\t// search 결과가 아니라 전체 목록을 가져온다.\r\n");
      out.write("\t\t\t\tfn_showList();\t// 관리자의 글 제외하고 글 목록 가져오기\t\t\t\r\n");
      out.write("\t\t\t} else{\r\n");
      out.write("\t\t\t\t// 만약 검색 버튼을 통해 검색한 후, paging된 숫자를 눌렀다면,\r\n");
      out.write("\t\t\t\t// 전체 목록이 아니라 search결과만을 띄워준다.\r\n");
      out.write("\t\t\t\tfn_search();\t// 검색버튼 클릭시 리스트 불러오는 함수\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\t// onload 함수의 끝\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 관리자의 글을 공지사항으로 가져오기\r\n");
      out.write("\t\tfunction fn_get_notice(){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl: 'selectNotice.do',\r\n");
      out.write("\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\tconsole.log('공지');\r\n");
      out.write("\t\t\t\t\tfn_makeNotice(resultMap.list);\r\n");
      out.write("\t\t\t\t},\t// success\r\n");
      out.write("\t\t\t\terror: function(){\r\n");
      out.write("\t\t\t\t\talert('공지사항 오류');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t// ajax\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 멤버 로그인, 관리자 로그인을 변경해주는 함수\r\n");
      out.write("\t\tfunction fn_toggle_mode(){\r\n");
      out.write("\t\t\t$('#mem_to_admin').click(function(){\r\n");
      out.write("\t\t\t\t$('#mem_mode').toggleClass('disabled');\r\n");
      out.write("\t\t\t\t$('#admin_mode').toggleClass('disabled');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#admin_to_mem ').click(function(){\r\n");
      out.write("\t\t\t\t$('#mem_mode').toggleClass('disabled');\r\n");
      out.write("\t\t\t\t$('#admin_mode').toggleClass('disabled');\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction click_search(){\r\n");
      out.write("\t\t\t$('#search_btn').click(function(){\r\n");
      out.write("\t\t\t\tfn_search();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 검색 목록 불러오는 ajax\r\n");
      out.write("\t\t function fn_search(){\r\n");
      out.write("\t\t\t\t$('#list').empty();\r\n");
      out.write("\t\t\t\tfn_get_notice();\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: 'searchBoard.do',\r\n");
      out.write("\t\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\t\tdata: 'column=' + $('#column').val() + '&query=' + $('#query').val() + '&page=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("\t\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\t\tfn_makeTable(resultMap.list);\r\n");
      out.write("\t\t\t\t\t\t$('#paging').empty();\r\n");
      out.write("\t\t\t\t\t\t$('#paging').html(resultMap.paging);\r\n");
      out.write("\t\t\t\t\t},\t// success\r\n");
      out.write("\t\t\t\t\terror: function(){\r\n");
      out.write("\t\t\t\t\t\talert('search_btn 오류');\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\t// ajax\t\r\n");
      out.write("\t\t}\t// fn_search \r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction fn_init(){\r\n");
      out.write("\t\t\t$('#init_btn').click(function(){\r\n");
      out.write("\t\t\t\t$('#list').empty();\r\n");
      out.write("\t\t\t\tfn_get_notice();\r\n");
      out.write("\t\t\t\tfn_showList();\r\n");
      out.write("\t\t\t});\t// onclick\r\n");
      out.write("\t\t}\t// fn_init\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction fn_insertBoard(){\r\n");
      out.write("\t\t\t$('#insert_board_btn').click(function(){\r\n");
      out.write("\t\t\t\tif(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mode == \"member\"}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\r\n");
      out.write("\t\t\t\t\tif( ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ){\t// 로그인된 상태가 아니라면\r\n");
      out.write("\t\t\t\t\t\talert('로그인이 필요합니다.');\r\n");
      out.write("\t\t\t\t\t\t$('.form').toggleClass('hide');\r\n");
      out.write("\t\t\t\t\t} else{\t// 로그인된 상태라면\r\n");
      out.write("\t\t\t\t\t\tlocation.href= \"insertBoardPage.do\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} // if member\r\n");
      out.write("\t\t\t\telse if(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mode == \"admin\"}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\r\n");
      out.write("\t\t\t\t\tif( ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginAdmin == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ){\t// 로그인된 상태가 아니라면\r\n");
      out.write("\t\t\t\t\t\talert('로그인이 필요합니다.');\r\n");
      out.write("\t\t\t\t\t\t$('.form').toggleClass('hide');\r\n");
      out.write("\t\t\t\t\t} else{\t// 로그인된 상태라면\r\n");
      out.write("\t\t\t\t\t\tlocation.href= \"insertBoardPage.do\";\r\n");
      out.write("\t\t\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t\t}\t// else if admin\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\talert('로그인이 필요합니다.');\r\n");
      out.write("\t\t\t\t\t$('.form').toggleClass('hide');\r\n");
      out.write("\t\t\t\t}\t// else\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\t// onclick\r\n");
      out.write("\t\t}\t// fn_insertBoard\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction fn_closeLogin(){\t// 로그인창에서 x 클릭시 로그인창 닫힘\r\n");
      out.write("\t\t\t$('#closeLogin').click(function(){\r\n");
      out.write("\t\t\t\t$('.form').toggleClass('hide');\r\n");
      out.write("\t\t\t})\t// onclick#\r\n");
      out.write("\t\t}\t// fn_closeLogin\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction fn_showList(){\r\n");
      out.write("\t\t\t$('#list').empty();\r\n");
      out.write("\t\t\tfn_get_notice();\t// 관리자의 글 공지사항으로 가져오기\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl: 'showList.do',\r\n");
      out.write("\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\tdata: 'page=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\tfn_makeTable(resultMap.list);\r\n");
      out.write("\t\t\t\t\t$('#paging').empty();\r\n");
      out.write("\t\t\t\t\t$('#paging').html(resultMap.paging);\r\n");
      out.write("\t\t\t\t},\t// end of success\r\n");
      out.write("\t\t\t\terror: function(){\r\n");
      out.write("\t\t\t\t\talert('목록 불러오기 오류');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\t// fn_showList\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// list 출력함수\r\n");
      out.write("\t\tfunction fn_makeTable(list){\r\n");
      out.write("\t\t\t$.each(list, function(i, board){\r\n");
      out.write("\t\t\t\tif(board.bfilename1 == 'null' || board.bfilename2 == 'null' || board.bfilename3 == 'null'){\r\n");
      out.write("\t\t\t\t\t$('<tr>')\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bidx) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.mid) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').html('<a href=\"selectBoard.do?bIdx=' + board.bidx + '\">' + board.btitle + '</a>') )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bpostDate) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bhit) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text('') )\r\n");
      out.write("\t\t\t\t\t.appendTo('#list');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\t$('<tr>')\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bidx) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.mid) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').html('<a href=\"selectBoard.do?bIdx=' + board.bidx + '\">' + board.btitle + '</a>') )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bpostDate) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bhit) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').html('<i class=\"far fa-image\"></i>') )\r\n");
      out.write("\t\t\t\t\t.appendTo( $('#list') ); \r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t});\t// each \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 공지사항 출력 함수\r\n");
      out.write("\t\tfunction fn_makeNotice(list){\r\n");
      out.write("\t\t\t$.each(list, function(i, board){\r\n");
      out.write("\t\t\t\tif(board.bfilename1 == 'null' || board.bfilename2 == 'null' || board.bfilename3 == 'null'){\r\n");
      out.write("\t\t\t\t\t$('<tr id=\"notice\">')\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bidx) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.mid) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').html('<a href=\"selectBoard.do?bIdx=' + board.bidx + '\">' + board.btitle + '</a>') )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bpostDate) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bhit) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text('') )\r\n");
      out.write("\t\t\t\t\t.appendTo('#list');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\t$('<tr id=\"notice\">')\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bidx) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.mid) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').html('<a href=\"selectBoard.do?bIdx=' + board.bidx + '\">' + board.btitle + '</a>') )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bpostDate) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').text(board.bhit) )\r\n");
      out.write("\t\t\t\t\t.append( $('<td>').html('<i class=\"far fa-image\"></i>') )\r\n");
      out.write("\t\t\t\t\t.appendTo( $('#list') ); \r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t});\t// each \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\t// fn_makeNotice\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("<body>\r\n");
      out.write(" \r\n");
      out.write("\t \r\n");
      out.write("\t<h1>게시판</h1>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<!-- 검색한 결과를 띄워줄 때는, 그 전에 사용했던 column이 선택되어있도록 해준다. -->\r\n");
      out.write("\t<select id=\"column\">\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f5(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</select>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 검색했을 때 입력한 값 그대로 query를 유지해준다. -->\r\n");
      out.write("\t<input type=\"text\" id=\"query\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"button\" id=\"search_btn\" value=\"검색\">\r\n");
      out.write("\t<input type=\"button\" id=\"init_btn\" value=\"전체 목록 보기\">\r\n");
      out.write("\t\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td> 글번호 </td>\r\n");
      out.write("\t\t\t\t<td> 작성자 </td>\r\n");
      out.write("\t\t\t\t<td> 제목 </td>\r\n");
      out.write("\t\t\t\t<td> 작성일 </td>\r\n");
      out.write("\t\t\t\t<td> 조회수 </td>\r\n");
      out.write("\t\t\t\t<td> 첨부파일</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\r\n");
      out.write("\t\t<tbody id=\"list\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tfoot id=\"paging\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</tfoot>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<input type=\"button\" id=\"insert_board_btn\" value=\"새 글 작성\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/footer.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("로그인", request.getCharacterEncoding()), out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/board/viewBoardList.jsp(224,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${column eq 'BTITLE'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<option value=\"BTITLE\" selected>제목</option>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/board/viewBoardList.jsp(227,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${column ne 'BTITLE'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<option value=\"BTITLE\">제목</option>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/board/viewBoardList.jsp(230,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${column eq 'MID'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<option value=\"MID\" selected>작성자</option>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/board/viewBoardList.jsp(233,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${column ne 'MID'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<option value=\"MID\">작성자</option>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /WEB-INF/views/board/viewBoardList.jsp(236,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${column eq 'BCONTENT'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<option value=\"BCONTENT\" selected>내용</option>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f5 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f5_reused = false;
    try {
      _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f5.setParent(null);
      // /WEB-INF/views/board/viewBoardList.jsp(239,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${column ne 'BCONTENT'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
      if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<option value=\"BCONTENT\">내용</option>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f5);
      _jspx_th_c_005fif_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f5_reused);
    }
    return false;
  }
}
