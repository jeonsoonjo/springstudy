/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-08-01 08:17:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/spring0303/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringD/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1624616931203L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\t<title>MOOYA HOTEL</title>\r\n");
      out.write("\t\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/loginWindow.css\"> \r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/layout.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"http://developers.kakao.com/sdk/js/kakao.min.js\"></script> <!-- 카카오 API -->\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t// 페이지 로드\r\n");
      out.write("\t    onload = function(){\r\n");
      out.write("\t\t\tgetDate();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById('privacy').onclick = function(){\r\n");
      out.write("\t\t    \twindow.open('privacy.do', '', 'width=640, height=480, resizable=no');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tdocument.getElementById('term').onclick = function(){\r\n");
      out.write("\t\t    \twindow.open('term.do', '', 'width=640, height=480, resizable=no');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tdocument.getElementById('noEmail').onclick = function(){\r\n");
      out.write("\t\t    \twindow.open('noEmail.do', '', 'width=400, height=352, resizable=no');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfn_login();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t    \r\n");
      out.write("\t\t// 현재 시간 나타내기\r\n");
      out.write("\t    function getDate() { \r\n");
      out.write("           date = setInterval(function () { \r\n");
      out.write("               var dateString = \"\"; \r\n");
      out.write("\r\n");
      out.write("               var newDate = new Date(); \r\n");
      out.write("\r\n");
      out.write("               dateString += (\"0\" + newDate.getHours()).slice(-2) + \":\"; \r\n");
      out.write("               dateString += (\"0\" + newDate.getMinutes()).slice(-2) ; \r\n");
      out.write("               //document.write(dateString); 문서에 바로 그릴 수 있다. \r\n");
      out.write("               $(\"#date1\").text(dateString); \r\n");
      out.write("               $(\"#date2\").text(dateString); \r\n");
      out.write("           }, 1000);   // 1초 단위로  \r\n");
      out.write("\t    }   \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 회원 로그인, 관리자 로그인을 변경해주는 함수\r\n");
      out.write("\t\tfunction fn_toggle_mode(){\r\n");
      out.write("\t\t\t// 관리자 모드로 전환\r\n");
      out.write("\t\t\t$('#mem_to_admin').click(function(){\r\n");
      out.write("\t\t\t\t$('#mem_mode').toggleClass('hide');\r\n");
      out.write("\t\t\t\t$('#admin_mode').toggleClass('hide');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t// 회원 모드로 전환\r\n");
      out.write("\t\t\t$('#admin_to_mem').click(function(){\r\n");
      out.write("\t\t\t\t$('#mem_mode').toggleClass('hide');\r\n");
      out.write("\t\t\t\t$('#admin_mode').toggleClass('hide');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 로그인 화면 보여주기\r\n");
      out.write("\t\tfunction fn_showLogin(){\r\n");
      out.write("\t\t\t$('.form').toggleClass('hide');\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 로그인(login)\r\n");
      out.write("\t\tfunction fn_login(){\r\n");
      out.write("\t\t\t$('#login_btn').click(function(e){\r\n");
      out.write("\t\t\t\t if($('#kakaoLogin').val != \"Y\"){ // 회원 로그인일 때만 유효성 검사\r\n");
      out.write("\t\t\t\t\tif($('#mId').val() == '' || $('#mPw').val() == ''){ // 아이디, 비밀번호 입력 값이 없을 경우\r\n");
      out.write("\t\t\t\t\t\talert('아이디와 비밀번호는 필수입니다.');\r\n");
      out.write("\t\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t\t$('#mId').focus();\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t} else if($('#kakaoLogin').val == \"Y\"){ // 카카오 로그인\r\n");
      out.write("\t\t\t\t\t\t$('#f_mem').submit();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 카카오 API 초기화\r\n");
      out.write("\t\tKakao.init('464a8f29a97a043193116da7f11294e8');\t// 발급 받은 javaScript 키\r\n");
      out.write("\t\tKakao.isInitialized(); // 카카오 로그인 정보 초기화\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 카카오 로그인(kakaoLoginPopUp) - 팝업 방식\r\n");
      out.write("\t\tfunction kakaoLoginPopUp() {\r\n");
      out.write("\t\t    Kakao.Auth.login({\r\n");
      out.write("\t\t        success: function(authObj) { // 카카오계정 인증할 때, 토큰 발급 받음\r\n");
      out.write("\t\t            Kakao.Auth.setAccessToken(authObj.access_token); // 발급 받은 토큰 사용하도록 세팅\r\n");
      out.write("\t\t\t\t\tsetUserEmail(); // 사용자 이메일 조회(이메일 존재 여부에 따라 회원가입 or 로그인)\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        fail: function(err) { // 카카오계정 인증에 실패할 경우\r\n");
      out.write("\t\t            alert('카카오톡과 연결이 완료되지 않았습니다. 다시 시도해주세요.' + JSON.stringify(err));\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t    })\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 사용자 이메일 조회(setUserEmail) : DB에 이메일 존재 여부에 따라 회원가입 or 로그인\r\n");
      out.write("\t\tfunction setUserEmail(){\r\n");
      out.write("\t\t\tKakao.API.request({ // 카카오에서 가져 올 프로퍼티 요청\r\n");
      out.write("\t\t\t    url: '/v2/user/me', // 사용자 정보 가져오는 api url\r\n");
      out.write("\t\t\t    data: { // 이메일 가져오기\r\n");
      out.write("\t\t\t        property_keys: [\"kakao_account.email\"]\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    success: function(response) { // 카카오에서 가져 온 이메일 중복체크\r\n");
      out.write("\t\t\t    \t$('#mEmail').val(response.kakao_account.email);\r\n");
      out.write("\t\t\t    \temailCheck(response.kakao_account.email);\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    fail: function(error) {\r\n");
      out.write("\t\t\t        console.log(error);\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 이메일 중복 체크(emailCheck)\r\n");
      out.write("\t\tfunction emailCheck(mEmail){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl: 'emailCheck.do',\r\n");
      out.write("\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\tdata: 'mEmail=' + mEmail,\r\n");
      out.write("\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\tif(resultMap.result == 0){ // DB에 일치하는 이메일이 없는 경우 회원가입으로 이동\r\n");
      out.write("\t\t\t\t\t\talert('첫 방문입니다! 회원가입 화면으로 이동합니다.');\r\n");
      out.write("\t\t\t\t\t\tlocation.href = 'http://localhost:9090/d/joinPage.do';\r\n");
      out.write("\t\t\t\t\t} else{ // DB에 일치하는 이메일이 있는 경우 해당 이메일로 로그인\r\n");
      out.write("\t\t\t\t\t\talert('카카오 계정으로 로그인합니다.');\r\n");
      out.write("\t\t\t\t\t\t$('#kakaoLogin').val(\"Y\");\r\n");
      out.write("\t\t\t\t\t\t$('#f_mem').submit();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function(xhr, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<div class=\"header\">\r\n");
      out.write("\t\t\t<h1 class=\"logo\">\r\n");
      out.write("\t\t\t\t<a href=\"index.do\">MOOYA HOTEL</a>\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 1900px 이하 화면일 때 -->\r\n");
      out.write("\t\t\t<div class=\"small_header_right\">\r\n");
      out.write("\t\t\t\t<span>Seoul</span>\r\n");
      out.write("\t\t\t\t<span id=\"date1\"></span>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- 비로그인 화면 -->\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t \t\t\r\n");
      out.write("\t\t \t\t<!-- 로그인 성공 화면 -->\r\n");
      out.write("\t\t \t\t");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<a href=\"reservationSelectDatePage.do\">예약하기</a>\r\n");
      out.write("\t\t\t\t<a href=\"boardPage.do\">게시판</a>\r\n");
      out.write("\t\t\t\t<a href=\"\">이벤트</a>\r\n");
      out.write("\t\t\t\t<a href=\"infoRoom.do\">객실</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 1900px 이상 화면일 때 -->\r\n");
      out.write("\t\t\t<!-- right -->\r\n");
      out.write("\t\t\t<div class=\"header_right\"> \r\n");
      out.write("\t\t\t\t<span>Seoul</span>\r\n");
      out.write("\t\t\t\t<span id=\"date2\"></span>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- 비로그인 화면 -->\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t \t\t\r\n");
      out.write("\t\t \t\t<!-- 로그인 성공 화면 -->\r\n");
      out.write("\t\t \t\t");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<a href=\"reservationSelectDatePage.do\">예약하기</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- left -->\r\n");
      out.write("\t\t\t<div class=\"header_left\"> \r\n");
      out.write("\t\t\t\t<a href=\"boardPage.do\">게시판</a>\r\n");
      out.write("\t\t\t\t<a href=\"\">이벤트</a>\r\n");
      out.write("\t\t\t\t<a href=\"infoRoom.do\">객실</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 회원 화면 -->\r\n");
      out.write("\t\t<div id=\"mem_mode\" class=\"myMenu\">\r\n");
      out.write("\t\t\t<form id=\"f_mem\" action=\"login.do\" method=\"post\">\r\n");
      out.write("\t\t\t\t<!-- 카카오 계정으로 로그인 시 값을 전달해주기 위함(일반 로그인: N, 카카오 로그인: Y)-->\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"kakaoLogin\" id=\"kakaoLogin\" value=\"N\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"mEmail\" id=\"mEmail\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t  \t   \t \t<div class=\"form hide\">\r\n");
      out.write("\t  \t   \t \t\t<!-- 입력 화면 -->\r\n");
      out.write("\t  \t   \t \t\t<h2 style=\"text-align:center\">회원 로그인</h2>\r\n");
      out.write("\t\t\t\t\t<a href=\"#\" onclick='fn_showLogin();'><i class=\"fas fa-times fa-3x\"></i></a>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- form2 -->\r\n");
      out.write("\t   \t\t\t\t<div class=\"form2\">\r\n");
      out.write("\t   \t\t\t\t \t<!-- form3 : 아이디, 비밀번호-->\r\n");
      out.write("\t     \t\t\t\t<div class=\"form3\">\r\n");
      out.write("\t     \t\t\t\t\t<label for=\"id\">아이디</label><input type=\"text\" name=\"mId\" id=\"mId\">\r\n");
      out.write("\t      \t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t      \t\t\t\t\t<label for=\"password\">비밀번호</label><input type=\"password\" name=\"mPw\" id=\"mPw\">\r\n");
      out.write("\t     \t\t\t\t</div>\r\n");
      out.write("\t     \t\t\t\t\r\n");
      out.write("\t     \t\t\t\t<input type=\"submit\" id=\"login_btn\" value=\"로그인\">\r\n");
      out.write("\t     \t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t     \t\t\t\t\r\n");
      out.write("\t     \t\t\t\t<!-- form4 : 회원가입, 아이디/비밀번호 찾기, 카카오계정 로그인-->\r\n");
      out.write("\t     \t\t\t\t<!-- 회원 로그인 => 관리자로 로그인 전환 화면 -->\r\n");
      out.write("\t     \t\t\t\t<div class=\"form4\">\r\n");
      out.write("\t      \t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("    \t\t\t\t\t\t<label><input type=\"button\" value=\"회원가입\" onclick=\"location.href='joinPage.do'\"></label>\r\n");
      out.write("    \t\t\t\t\t\t<label><input type=\"button\" value=\"아이디/비밀번호 찾기\" onclick=\"location.href='findIdAndPwPage.do'\"></label>\r\n");
      out.write("    \t\t\t\t\t\t<label><input type=\"button\" id=\"mem_to_admin\" value=\"관리자로 로그인하기\"></label>\r\n");
      out.write("\t    \t\t\t\t\t\t\r\n");
      out.write("\t\t\t     \t\t\t<!-- 카카오계정 로그인 -->\r\n");
      out.write("\t\t\t\t\t\t\t<a id=\"kakaoLogin_btn\" href=\"javascript:kakaoLoginPopUp()\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<img src=\"//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg\" width=\"222\">\r\n");
      out.write("\t\t\t\t\t\t\t</a><br>\r\n");
      out.write("\t\t\t\t\t\t</div> <!-- form4 -->\r\n");
      out.write("\t\t\t\t\t</div> <!-- form2 -->\r\n");
      out.write("\t\t\t\t</div>\t<!-- form -->\r\n");
      out.write("\t\t\t</form> \r\n");
      out.write("\t\t</div>\t<!-- myMenu  -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 관리자 화면 -->\r\n");
      out.write("\t\t<div id=\"admin_mode\" class=\"myMenu disabled\">\r\n");
      out.write("\t\t\t<form id=\"f_admin\" action=\"loginAdmin.do\" method=\"post\">\r\n");
      out.write("\t  \t   \t \t<div class=\"form hide\">\r\n");
      out.write("\t  \t   \t \t\t<!-- 입력 화면 -->\r\n");
      out.write("\t  \t   \t \t\t<h2 style=\"text-align:center\">관리자 로그인</h2>\r\n");
      out.write("\t\t\t\t\t<a href=\"\" onclick='fn_showLogin();'><i class=\"fas fa-times fa-3x\"></i></a>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- form2 -->\r\n");
      out.write("\t   \t\t\t\t<div class=\"form2\">\r\n");
      out.write("\t   \t\t\t\t\t<!-- form3 : 아이디, 비밀번호-->\r\n");
      out.write("\t     \t\t\t\t<div class=\"form3\">\r\n");
      out.write("\t     \t\t\t\t\t<label for=\"id\">아이디</label><input type=\"text\" name=\"mId\" id=\"mId2\">\r\n");
      out.write("\t      \t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t      \t\t\t\t\t<label for=\"password\">비밀번호</label><input type=\"password\" name=\"mPw\" id=\"mPw2\">\r\n");
      out.write("\t     \t\t\t\t</div>\r\n");
      out.write("\t     \t\t\t\t\r\n");
      out.write("\t     \t\t\t\t<input type=\"submit\" id=\"login_btn2\" value=\"로그인\">\r\n");
      out.write("\t     \t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t     \t\t\t\t\r\n");
      out.write("\t     \t\t\t\t<!-- form4 : 관리자 로그인 => 회원으로 로그인 전환 화면 -->\r\n");
      out.write("\t     \t\t\t\t<div class=\"form4\">\r\n");
      out.write("\t      \t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t     \t\t\t\t\t<label><input type=\"button\" id=\"admin_to_mem\" value=\"회원으로 로그인하기\"></label>\r\n");
      out.write("\t\t\t\t\t\t</div> <!-- form4 -->\r\n");
      out.write("\t\t\t\t\t</div>\t<!-- form2 -->\r\n");
      out.write("\t\t\t\t</div>\t<!-- form-->\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\t<!-- myMenu -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t<section id=\"section\">\r\n");
      out.write("\t");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/layout/header.jsp(158,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser eq null && loginAdmin eq null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<a href=\"#\" onclick='fn_showLogin();'>로그인</a>\r\n");
          out.write("\t\t\t\t\t<a href=\"joinPage.do\">회원가입</a>\r\n");
          out.write("\t\t\t\t\t<a href=\"nonMemberPage.do\">비회원 예약 확인</a>\r\n");
          out.write("\t\t \t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/layout/header.jsp(165,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser ne null || loginAdmin ne null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t \t\t\t<a href=\"#\" onclick=\"location.href='logout.do'\">로그아웃</a>\r\n");
          out.write("\t\t \t\t\t<a href=\"myPage.do\">마이페이지</a>\r\n");
          out.write("\t\t \t\t\t<a href=\"myReservation.do?mNo=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">예약내역</a>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/layout/header.jsp(184,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser eq null && loginAdmin eq null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<a href=\"#\" onclick='fn_showLogin();'>로그인</a>\r\n");
          out.write("\t\t\t\t\t<a href=\"joinPage.do\">회원가입</a>\r\n");
          out.write("\t\t\t\t\t<a href=\"nonMemberPage.do\">비회원 예약 확인</a>\r\n");
          out.write("\t\t \t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/layout/header.jsp(191,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser ne null || loginAdmin ne null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t \t\t\t<a href=\"#\" onclick=\"location.href='logout.do'\">로그아웃</a>\r\n");
          out.write("\t\t \t\t\t<a href=\"myPage.do\">마이페이지</a>\r\n");
          out.write("\t\t \t\t\t<a href=\"myReservation.do?mNo=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.MNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">예약내역</a>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
