/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-08-01 04:36:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class findIdAndPw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/member/../layout/footer.jsp", Long.valueOf(1627715096899L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("utf-8"); 
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header2.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("아이디/비밀번호 찾기", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/layout.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/findIdAndPw.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- script -->\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t// 페이지 로드\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\tfn_findCheck();\r\n");
      out.write("\t\t\tfn_findId();\r\n");
      out.write("\t\t\tfn_findPw();\r\n");
      out.write("\t\t\tfn_emailCheck();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 아이디/비밀번호 찾기 radio 체크에 따른 화면 전환\r\n");
      out.write("\t\tfunction fn_findCheck(){\r\n");
      out.write("\t\t\t$('input[type=radio][name=find]').on('click', function(){\r\n");
      out.write("\t\t\t\tvar chkValue = $('input[type=radio][name=find]:checked').val();\r\n");
      out.write("\t\t\t\tif(chkValue == '1'){\r\n");
      out.write("\t\t\t\t\t$('#findId_form').css('display', 'block');\r\n");
      out.write("\t\t\t\t\t$('#findPw_form').css('display', 'none');\r\n");
      out.write("\t\t\t\t} else if(chkValue == '2'){\r\n");
      out.write("\t\t\t\t\t$('#findId_form').css('display', 'none');\r\n");
      out.write("\t\t\t\t\t$('#findPw_form').css('display', 'block');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 아이디 찾기(findId)\r\n");
      out.write("\t\tfunction fn_findId(){\r\n");
      out.write("\t\t\t$('#findId_btn').click(function(){\r\n");
      out.write("\t\t\t\tif($('#mName').val() == '' || $('#mEmail').val() == ''){ // 이름, 이메일 중 하나라도 입력 값이 없다면\r\n");
      out.write("\t\t\t\t\talert('이름과 이메일 모두 입력하세요');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t\tvar obj = { // 이름과 이메일 객체 생성\r\n");
      out.write("\t\t\t\t\t\tmname : $('#mName').val(),\r\n");
      out.write("\t\t\t\t\t\tmemail : $('#mEmail').val()\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: 'findId.do',\r\n");
      out.write("\t\t\t\t\ttype: 'post',\r\n");
      out.write("\t\t\t\t\tdata: JSON.stringify(obj), // 보내는 data 문자열화\r\n");
      out.write("\t\t\t\t\tcontentType: 'application/json', // 보내는 data가 json일 때, 필수 옵션\r\n");
      out.write("\t\t\t\t\tdataType: 'json', // 받는 data\r\n");
      out.write("\t\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\t\tif(resultMap.status == 500){ // 이름과 이메일이 일치하지 않을 경우\r\n");
      out.write("\t\t\t\t\t\t\talert('입력하신 정보와 일치하는 계정이 없습니다.');\r\n");
      out.write("\t\t\t\t\t\t\t$('#mName').val('');\r\n");
      out.write("\t\t\t\t\t\t\t$('#mEmail').val('');\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t} else if(resultMap.status == 200){ // 이름과 이메일이 일치할 경우 mId 반환\r\n");
      out.write("\t\t\t\t\t\t\talert(\"회원님이 찾으시는 아이디는 \" + resultMap.mId + \" 입니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t$('#mName').val('');\r\n");
      out.write("\t\t\t\t\t\t\t$('#mEmail').val('');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(xhr, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 비밀번호 찾기(findPw) : 이메일 인증 필요(mEmail2)\r\n");
      out.write("\t\tfunction fn_findPw(){\r\n");
      out.write("\t\t\t// 이메일 인증코드 버튼 비활성화(아이디, 이메일 확인 전까지 인증 절차를 막기 위함)\r\n");
      out.write("\t\t\t$('#emailCode_btn').click(function(){ }).prop(\"disabled\", true); \r\n");
      out.write("\t\t\t$('#findPw_btn').click(function(){\r\n");
      out.write("\t\t\t\tif($('#mId').val() == '' || $('#mEmail2').val() == ''){\r\n");
      out.write("\t\t\t\t\talert('아이디와 이메일 모두 입력하세요');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tvar obj = { // 이름과 이메일 객체 생성\r\n");
      out.write("\t\t\t\t\t\tmid : $('#mId').val(),\r\n");
      out.write("\t\t\t\t\t\tmemail : $('#mEmail2').val()\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: 'findPw.do',\r\n");
      out.write("\t\t\t\t\ttype: 'post',\r\n");
      out.write("\t\t\t\t\tdata: JSON.stringify(obj),\r\n");
      out.write("\t\t\t\t\tcontentType: 'application/json',\r\n");
      out.write("\t\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\t\tsuccess: function(resultMap){\r\n");
      out.write("\t\t\t\t\t\tif(resultMap.status == 500){ // 아이디와 이메일이 일치하지 않을 경우 인증코드 버튼 비활성화\r\n");
      out.write("\t\t\t\t\t\t\t$('.email2_result').text('입력하신 아이디와 이메일이 일치하지 않습니다. 확인하세요.');\r\n");
      out.write("\t\t\t\t\t\t\t$('.email2_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t\t\t$('#emailCode_btn').click(function(){ }).prop(\"disabled\", true);\r\n");
      out.write("\t\t\t\t\t\t\t$('#mId').val('');\r\n");
      out.write("\t\t\t\t\t\t\t$('#mEmail2').val('');\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t} else if(resultMap.status == 200){ // 아이디와 이메일이 일치할 경우 인증코드 버튼 활성화 + 이메일 재입력 막기(readonly)\r\n");
      out.write("\t\t\t\t\t\t\t$('.email2_result').text(\"입력하신 정보가 확인되었습니다. 인증코드를 받으세요.\");\r\n");
      out.write("\t\t\t\t\t\t\t$('.email2_result').css('color', '#804040');\r\n");
      out.write("\t\t\t\t\t\t\t$('#emailCode_btn').click(function(){ }).prop(\"disabled\", false);\r\n");
      out.write("\t\t\t\t\t\t\t$('#mEmail2').keyup(function(){ }).prop(\"readonly\", true);\r\n");
      out.write("\t\t\t\t\t\t\tfn_emailCode();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(xhr, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 이메일 인증코드 받기(emailCode)\r\n");
      out.write("\t\tfunction fn_emailCode(){\r\n");
      out.write("\t\t\t$('#emailCode_btn').click(function(){\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: 'emailCode.do',\r\n");
      out.write("\t\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\t\tdata: 'mEmail=' + $('#mEmail2').val(),\r\n");
      out.write("\t\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\t\tsuccess: function(resultMap) {\r\n");
      out.write("\t\t\t\t\t\talert('입력하신 메일로 임시 비밀번호가 발송되었습니다.');\r\n");
      out.write("\t\t\t\t\t\tfn_emailAuth(resultMap.authCode);\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(xhr, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 이메일 인증(emailAuth)\r\n");
      out.write("\t\tfunction fn_emailAuth(authCode) {\r\n");
      out.write("\t\t\t$('#emailAuth_btn').click(function() {\r\n");
      out.write("\t\t\t\tif(authCode == $('#userKey').val()) { // 받은 인증코드와 입력된 값이 같을 경우\r\n");
      out.write("\t\t\t\t\talert('인증되었습니다. 비밀번호 변경 페이지로 이동합니다.');\r\n");
      out.write("\t\t\t\t\t$('#f2').attr('action', 'changePwPage.do');\r\n");
      out.write("\t\t\t\t\t$('#f2').submit();\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\talert('인증에 실패했습니다. 인증코드를 정확히 입력하세요.');\r\n");
      out.write("\t\t\t\t\thistory.back();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 이메일 유효성 검사(emailCheck)\r\n");
      out.write("\t\tfunction fn_emailCheck(){\r\n");
      out.write("\t\t\t$('#mEmail').keyup(function(){\r\n");
      out.write("\t\t\t\t// 이메일 정규식\r\n");
      out.write("\t\t\t\tvar regEmail = /^[a-z0-9][a-z0-9_-]*@[a-zA-Z0-9]+([.][a-zA-Z]{2,}){1,2}$/;\r\n");
      out.write("\t\t\t\tif(!regEmail.test($('#mEmail').val())){ // 이메일 정규식 조건을 통과하지 못 했을 경우\r\n");
      out.write("\t\t\t\t\t$('.email_result').text('이메일 형식에 맞지 않습니다. 다시 입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('.email_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('.email_result').text('');\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#mEmail2').keyup(function(){\r\n");
      out.write("\t\t\t\t// 이메일 정규식\r\n");
      out.write("\t\t\t\tvar regEmail = /^[a-z0-9][a-z0-9_-]*@[a-zA-Z0-9]+([.][a-zA-Z]{2,}){1,2}$/;\r\n");
      out.write("\t\t\t\tif(!regEmail.test($('#mEmail2').val())){ // 이메일 정규식 조건을 통과하지 못 했을 경우\r\n");
      out.write("\t\t\t\t\t$('.email2_result').text('이메일 형식에 맞지 않습니다. 다시 입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('.email2_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('.email2_result').text('');\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"find_form\">\r\n");
      out.write("\t\t\t<h3>아이디 / 비밀번호 찾기</h3>\r\n");
      out.write("\t\t\t<!-- 아이디 찾기 -->\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"find\" id=\"findId\" value=\"1\" checked=\"checked\">\r\n");
      out.write("\t\t\t<label for=\"findId\">아이디 찾기</label>\r\n");
      out.write("\t\t\t<!-- 비밀번호 찾기 -->\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"find\" id=\"findPw\" value=\"2\">\r\n");
      out.write("\t\t\t<label for=\"findPw\">비밀번호 찾기</label>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 아이디 찾기 화면 -->\r\n");
      out.write("\t\t<div id=\"findId_form\">\r\n");
      out.write("\t\t\t<p class=\"title\">가입 당시 이름과 이메일을 입력하세요.</p><br>\r\n");
      out.write("\t\t\t<form id=\"f1\">\r\n");
      out.write("\t\t\t\t<!-- 이름 -->\r\n");
      out.write("\t\t\t\t<span class=\"naming\">이름</span><br>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"mName\" id=\"mName\" placeholder=\"ex) 홍길동\">\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<!-- 이메일 -->\r\n");
      out.write("\t\t\t\t<span class=\"naming\">이메일</span><br>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"mEmail\" id=\"mEmail\" placeholder=\"ex) hong@example.com\"><br>\r\n");
      out.write("\t\t\t\t<span class=\"email_result\"></span><br><br>\r\n");
      out.write("\t\t\t\t<!-- 확인 버튼 -->\r\n");
      out.write("\t\t\t\t<input type=\"button\" id=\"findId_btn\" value=\"확인\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"회원가입\" onclick=\"location.href='joinPage.do'\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 비밀번호 찾기 화면 -->\r\n");
      out.write("\t\t<div id=\"findPw_form\" style=\"display: none;\"> <!-- 처음에는 보이지 않고 비번찾기 시에 화면 나타내기 -->\r\n");
      out.write("\t\t\t<p class=\"title\">가입 당시 아이디와 이메일을 입력하세요.(이메일 인증 필요)</p><br>\r\n");
      out.write("\t\t\t<form id=\"f2\" method=\"post\">\r\n");
      out.write("\t\t\t\t<!-- 아이디 -->\r\n");
      out.write("\t\t\t\t<span class=\"naming\">아이디</span><br>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"mId\" id=\"mId\" placeholder=\"ex) hong123\">\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<!-- 이메일 -->\r\n");
      out.write("\t\t\t\t<span class=\"naming\">이메일</span><br>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"mEmail\" id=\"mEmail2\" placeholder=\"ex) hong@example.com\"><br>\r\n");
      out.write("\t\t\t\t<span class=\"email2_result\"></span><br>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<!-- 확인 버튼 -->\r\n");
      out.write("\t\t\t\t<input type=\"button\" id=\"findPw_btn\" value=\"확인\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<form id=\"f3\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" id=\"emailCode_btn\" value=\"인증코드 받기\"><br>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userKey\" id=\"userKey\" style=\"width:180px;\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" id=\"emailAuth_btn\" value=\"인증하기\" style=\"width:108px; height:45px;\"><br><br>\r\n");
      out.write("\t\t\t\t<span class=\"emailAuth_result\"></span><br>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"회원가입\" class=\"join\" onclick=\"location.href='joinPage.do'\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t</section>\r\n");
      out.write("\t\r\n");
      out.write("\t<footer id=\"footer\">\r\n");
      out.write("\t\t<dl>\r\n");
      out.write("\t\t\t<dt>\r\n");
      out.write("\t\t\t\t<h3>MOOYA HOTEL</h3>\r\n");
      out.write("\t\t\t</dt>\r\n");
      out.write("\t\t\t<dd>\r\n");
      out.write("\t\t\t\t<span id=\"privacy\" style=\"cursor: pointer;\">개인정보처리방침</span>\r\n");
      out.write("\t\t\t\t<span id=\"term\" style=\"cursor: pointer;\">이용약관</span>\r\n");
      out.write("\t\t\t\t<span id=\"noEmail\" style=\"cursor: pointer;\">이메일주소 무단수집거부</span>\r\n");
      out.write("\t\t\t</dd>\r\n");
      out.write("\t\t</dl>\r\n");
      out.write("\t\t<address>\r\n");
      out.write("\t\t\t<span>서울특별시 마포구 서강로 136 아이비티워 2층,3층</span>\r\n");
      out.write("\t\t\t<span>  Tel. 02-123-4567  </span>\r\n");
      out.write("\t\t\t<span> (주)무야호 </span>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<span> \r\n");
      out.write("\t\t\t\tE-mail. \r\n");
      out.write("\t\t\t\t<a href=\"mailto:hotel@mooyahotel.co.kr\">hotel@mooyahotel.co.kr</a>\r\n");
      out.write("\t\t\t</span>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<span>대표자 : 유재석  </span>\r\n");
      out.write("\t\t\t<span>등록번호 111 22 33333</span>\r\n");
      out.write("\t\t</address>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<i class=\"far fa-copyright\"></i>\r\n");
      out.write("\t\t\t<b>www.mooyahotel.com</b>\r\n");
      out.write("\t\t\t<span>All rights reserved.</span>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</footer>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write(' ');
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
