/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-08-01 04:57:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class changePw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/member/../layout/footer.jsp", Long.valueOf(1627715096899L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
 request.setCharacterEncoding("utf-8"); 
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header2.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("비밀번호 변경", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/layout.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/changePw.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- script -->\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t// 페이지 로드\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\tfn_pwCheck();\r\n");
      out.write("\t\t\tfn_pwCheck2();\r\n");
      out.write("\t\t\tfn_changePw();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 새 비밀번호 검증(pwCheck)\r\n");
      out.write("\t\tvar pwPass = false;\r\n");
      out.write("\t\tfunction fn_pwCheck(){\r\n");
      out.write("\t\t\t$('#mPw').keyup(function(){\r\n");
      out.write("\t\t\t\t// 비밀번호 정규식\r\n");
      out.write("\t\t\t\tvar regPW = /^[0-9]{4}$/; \r\n");
      out.write("\t\t\t\tif(regPW.test($('#mPw').val())){ // 비밀번호 정규식 조건을 통과 했을 경우\r\n");
      out.write("\t\t\t\t\t$('.pw_result').text('사용 가능한 비밀번호입니다.');\r\n");
      out.write("\t\t\t\t\t$('.pw_result').css('color', '#804040');\r\n");
      out.write("\t\t\t\t\tpwPass = true;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('.pw_result').text('비밀번호는 숫자(0~9) 4자리만 입력 가능합니다.');\r\n");
      out.write("\t\t\t\t\t$('.pw_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t// 실제 사용할 PW 정규식\r\n");
      out.write("\t\t\t\t\t// ^[A-Za-z0-9`~!@#$%^&*]{4,19}$\r\n");
      out.write("\t\t\t\t\t// 비밀번호는 영어 대,소문자/숫자/특수기호 포함 5~20자리 입니다.\r\n");
      out.write("\t\t\t\t\tpwPass = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 새 비밀번호 확인 검증(pwCheck2)\r\n");
      out.write("\t\tvar pwPass2 = false;\r\n");
      out.write("\t\tfunction fn_pwCheck2(){\r\n");
      out.write("\t\t\t$('#mPw2').keyup(function(){\r\n");
      out.write("\t\t\t\tif($('#mPw').val() == $('#mPw2').val()){ // 입력한 비밀번호와 비밀번호 확인 값이 일치할 경우\r\n");
      out.write("\t\t\t\t\t$('.pw2_result').text('비밀번호가 일치합니다.');\r\n");
      out.write("\t\t\t\t\t$('.pw2_result').css('color', '#804040');\r\n");
      out.write("\t\t\t\t\tpwPass2 = true;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('.pw2_result').text('새로 입력한 비밀번호가 일치하지 않습니다. 확인하세요.');\r\n");
      out.write("\t\t\t\t\t$('.pw2_result').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t$('#mPw2').focus();\r\n");
      out.write("\t\t\t\t\tpwPass2 = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 비밀번호 변경(changePw)\r\n");
      out.write("\t\tfunction fn_changePw(){\r\n");
      out.write("\t\t\t$('#changePw_btn').click(function(){\r\n");
      out.write("\t\t\t\tif($('#mPw').val() == ''){ // 비밀번호 입력하지 않을 경우\r\n");
      out.write("\t\t\t\t\talert('비밀번호를 입력하세요.');\r\n");
      out.write("\t\t\t\t\t$('#mPw').focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else if(!pwPass){ // 비밀번호 정규식 조건을 통과하지 못 했을 경우\r\n");
      out.write("\t\t\t\t\talert('비밀번호 조건을 확인하세요!');\r\n");
      out.write("\t\t\t\t\t$('#mPw').focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else if($('#mPw2').val() == ''){ // 비밀번호 확인 입력하지 않을 경우\r\n");
      out.write("\t\t\t\t\talert('비밀번호 확인 검증을 해주세요!');\r\n");
      out.write("\t\t\t\t\t$('#mPw2').focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else if(!pwPass2){ // 비밀번호 확인 검증이 이뤄지지 않을 경우\r\n");
      out.write("\t\t\t\t\talert('새로 입력한 비밀번호가 일치하지 않습니다!');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t$('#f').attr('action', 'changePw.do');\r\n");
      out.write("\t\t\t\t\t$('#f').submit();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 비밀번호 변경 화면 -->\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"changePw_from\">\r\n");
      out.write("\t\t\t<form id=\"f\" method=\"post\">\r\n");
      out.write("\t\t\t\t<h3>비밀번호 변경</h3><br><br>\r\n");
      out.write("\t\t\t\t<span class=\"naming\">새 비밀번호</span><br>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"mPw\" id=\"mPw\"><br>\r\n");
      out.write("\t\t\t\t<span class=\"pw_result\"></span><br><br>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<span class=\"naming\">비밀번호 확인</span><br>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"mPw2\" id=\"mPw2\"><br>\r\n");
      out.write("\t\t\t\t<span class=\"pw2_result\"></span><br><br>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"mEmail\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.MEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" id=\"changePw_btn\" value=\"비밀번호 변경\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"돌아가기\" onclick=\"location.href='index.do'\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t</section>\r\n");
      out.write("\t\r\n");
      out.write("\t<footer id=\"footer\">\r\n");
      out.write("\t\t<dl>\r\n");
      out.write("\t\t\t<dt>\r\n");
      out.write("\t\t\t\t<h3>MOOYA HOTEL</h3>\r\n");
      out.write("\t\t\t</dt>\r\n");
      out.write("\t\t\t<dd>\r\n");
      out.write("\t\t\t\t<span id=\"privacy\" style=\"cursor: pointer;\">개인정보처리방침</span>\r\n");
      out.write("\t\t\t\t<span id=\"term\" style=\"cursor: pointer;\">이용약관</span>\r\n");
      out.write("\t\t\t\t<span id=\"noEmail\" style=\"cursor: pointer;\">이메일주소 무단수집거부</span>\r\n");
      out.write("\t\t\t</dd>\r\n");
      out.write("\t\t</dl>\r\n");
      out.write("\t\t<address>\r\n");
      out.write("\t\t\t<span>서울특별시 마포구 서강로 136 아이비티워 2층,3층</span>\r\n");
      out.write("\t\t\t<span>  Tel. 02-123-4567  </span>\r\n");
      out.write("\t\t\t<span> (주)무야호 </span>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<span> \r\n");
      out.write("\t\t\t\tE-mail. \r\n");
      out.write("\t\t\t\t<a href=\"mailto:hotel@mooyahotel.co.kr\">hotel@mooyahotel.co.kr</a>\r\n");
      out.write("\t\t\t</span>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<span>대표자 : 유재석  </span>\r\n");
      out.write("\t\t\t<span>등록번호 111 22 33333</span>\r\n");
      out.write("\t\t</address>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<i class=\"far fa-copyright\"></i>\r\n");
      out.write("\t\t\t<b>www.mooyahotel.com</b>\r\n");
      out.write("\t\t\t<span>All rights reserved.</span>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</footer>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write(' ');
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
