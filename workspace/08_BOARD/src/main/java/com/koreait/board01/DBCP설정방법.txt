DBCP을 활용한 간단한 게시판 작성

1. web.xml에 아래 태그를 추가한다(인코딩 설정)
	<!-- 인코딩 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
2. pom.xml 최신화를 진행한다

3. ojdbc6.jar
	* 아래 2가지 중 한 가지만 사용한다
	1) pom.xml 디펜던시 추가하기 : 해당 project만 사용한다는 의미
		<repositories>
			<repository>
				<id>oracle</id>
				<name>Oracle JDBC Repository</name>
				<url>https://maven.jahia.org/maven2</url>
			</repository>
		</repositories>
		
		<dependencies>
			<!-- ojdbc6.jar -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>12.1.0.2</version>
			</dependency>
		</dependencies>
	2) tomcat\lib 디렉터리에 ojdbc6.jar 추가하기 : 전체 project가 사용한다는 의미(추천)

4. context.xml <Resource> 태그를 추가한다
	* Package Explorer > servers > tomcat > context.xml
	<Resource
		name = "jdbc/oracle"
		type = "javax.sql.DataSource"
		driverClassName = "oracle.jdbc.OracleDriver"
		url = "jdbc:oracle:thin:@127.0.0.1:1521:xe"
		username = "spring"
		password = "1111"
		maxTotal = "8"
		maxIdle = "2"
		maxWaitMillis = "5000"
    />


















